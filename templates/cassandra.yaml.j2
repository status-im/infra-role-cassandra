# See https://cassandra.apache.org/doc/latest/configuration/

# The name of the cluster. This is mainly used to prevent machines in
# one logical cluster from joining another.
cluster_name: '{{ cassandra_cluster_name | mandatory }}'

# - AllowAllAuthenticator performs no checks - set it to disable authentication.
# - PasswordAuthenticator relies on username/password pairs to authenticate users.
#   It keeps usernames and hashed passwords in system_auth.roles table.
authenticator: {{ (cassandra_db_users|length > 0) | ternary("PasswordAuthenticator", "AllowAllAuthenticator") }}

# Manages access to databases and stores role data in the system_auth keyspace.
role_manager: CassandraRoleManager

# This defines the number of tokens randomly assigned to this node on the ring
# The more tokens, relative to other nodes, the larger the proportion of data
# that this node will store. You probably want all nodes to have the same number
# of tokens assuming they have equal hardware capability.
num_tokens: {{ cassandra_num_tokens }}

# Addresses of hosts that are deemed contact points. 
# Cassandra nodes use this list of hosts to find each other and learn
# the topology of the ring.
seed_provider:
  - class_name: org.apache.cassandra.locator.SimpleSeedProvider
    parameters:
      - seeds: {{ cassandra_seeds | join(', ') }}

# Address or interface to bind to and tell other Cassandra nodes to connect to.
# Setting listen_address to 0.0.0.0 is always wrong.
listen_address: '{{ cassandra_listen_address }}'

# TCP port, for commands and data
# For security reasons, you should not expose this port to the internet.  Firewall it if needed.
storage_port: {{ cassandra_storage_port }}

# The address or interface to bind the native transport server to.
# For security reasons, you should not expose this port to the internet.  Firewall it if needed.
rpc_address: '{{ cassandra_rpc_address }}'

# Whether to start the native transport server.
# Please note that the address on which the native transport is bound is the
# same as the rpc_address. The port however is different and specified below.
start_native_transport: true

# port for the CQL native transport to listen for clients on
# For security reasons, you should not expose this port to the internet.  Firewall it if needed.
native_transport_port: {{ cassandra_native_port }}

# The partitioner is responsible for distributing groups of rows (by
# partition key) across nodes in the cluster.
partitioner: org.apache.cassandra.dht.Murmur3Partitioner

# Writes may be acked immediately and the CommitLog is simply
# synced every commitlog_sync_period_in_ms milliseconds.
commitlog_sync: periodic
commitlog_sync_period_in_ms: 10000

# Data locations
data_file_directories:
  - {{ cassandra_data_dir }}/data
commitlog_directory: {{ cassandra_data_dir }}/commitlog
saved_caches_directory: {{ cassandra_data_dir }}/saved_caches

# The snitch has two functions:
#
# - it teaches Cassandra enough about your network topology to route
#   requests efficiently
# - it allows Cassandra to spread replicas around your cluster to avoid
#   correlated failures. It does this by grouping machines into
#   "datacenters" and "racks."  Cassandra will do its best not to have
#   more than one replica on the same "rack" (which may not actually
#   be a physical location)
#
endpoint_snitch: GossipingPropertyFileSnitch

# Maximum memory to use for sstable chunk cache and buffer pooling.
file_cache_size_in_mb: 1024

# For workloads with more data than can fit in memory, Cassandra's
# bottleneck will be reads that need to fetch data from
# disk. "concurrent_reads" should be set to (16 * number_of_drives) in
# order to allow the operations to enqueue low enough in the stack
# that the OS and drives can reorder them. Same applies to
# "concurrent_counter_writes", since counter writes read the current
# values before incrementing and writing them back.
#
# On the other hand, since writes are almost never IO bound, the ideal
# number of "concurrent_writes" is dependent on the number of cores in
# your system; (8 * number_of_cores) is a good rule of thumb.
concurrent_reads: 32
concurrent_writes: {{ 8 * ansible_processor_vcpus }}
concurrent_counter_writes: 32

# How long the coordinator should wait for read operations to complete
read_request_timeout_in_ms: 10000
# How long the coordinator should wait for seq or index scans to complete
range_request_timeout_in_ms: 20000
# How long the coordinator should wait for writes to complete
write_request_timeout_in_ms: 3000
# How long the coordinator should wait for counter writes to complete
counter_write_request_timeout_in_ms: 10000
# How long a coordinator should continue to retry a CAS operation
# that contends with other proposals for the same row
cas_contention_timeout_in_ms: 1000
# How long the coordinator should wait for truncates to complete
# (This can be much longer, because unless auto_snapshot is disabled
# we need to flush first so we can snapshot before removing the data.)
truncate_request_timeout_in_ms: 60000
# The default timeout for other, miscellaneous operations
request_timeout_in_ms: 20000
